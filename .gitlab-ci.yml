stages:
    - test
    - build
    - deploy



test_build_image:
  stage: test
  image: docker:git
  services:
  - docker:dind
  script:
    - docker build .
  except:
    - tags


build_image:
  stage: deploy
  image: docker:git
  services:
  - docker:dind
  script:
    - docker login -u gitlab-ci-token -p $CI_BUILD_TOKEN git.teamwork.net:5043/docker/itop
    - docker build -t git.teamwork.net:5043/docker/itop:$CI_BUILD_TAG .
    - docker push git.teamwork.net:5043/docker/itop:$CI_BUILD_TAG
  only:
    - tags



push_to_github:
    stage: build
    script:
        - bash -c "git remote remove github; exit 0"
#        - echo "ssh -i /tmp/.ssh_key_temp.$CI_PROJECT_ID  \$@" > /tmp/.ssh_exec.$CI_PROJECT_ID
#        - chmod 700 /tmp/.ssh_exec.$CI_PROJECT_ID
#        - export GIT_SSH=/tmp/.ssh_exec.$CI_PROJECT_ID
#        - touch /tmp/.ssh_key_temp.$CI_PROJECT_ID
#        - chmod 700 /tmp/.ssh_key_temp.$CI_PROJECT_ID
#        - echo "$github_key" >> /tmp/.ssh_key_temp.$CI_PROJECT_ID
        - git status
        - git remote add github $GIT_HUB_URL
        - git config --global user.email "noreply@teamwork.net"
        - git config --global user.name "TeamWork"        
#        - git pull github master

        - git checkout master
        - git pull origin master
        - git status
        - bash -c "git push --force github master 2>&1 | grep -v github; echo $?"
        - git remote remove github
#        - rm /tmp/.ssh_key_temp.$CI_PROJECT_ID
#        - rm /tmp/.ssh_exec.$CI_PROJECT_ID